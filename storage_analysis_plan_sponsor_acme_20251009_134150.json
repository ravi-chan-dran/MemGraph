{
  "timestamp": "2025-10-09T13:41:50.164082",
  "guid": "plan_sponsor_acme",
  "architecture": {
    "description": "MemoryGraph uses a multi-modal storage architecture with three specialized layers",
    "layers": {
      "sqlite": {
        "purpose": "Structured facts storage",
        "schema": "Key-value pairs with confidence scores",
        "characteristics": [
          "ACID compliance",
          "Fast lookups",
          "Structured data"
        ]
      },
      "chromadb": {
        "purpose": "Semantic episode storage",
        "schema": "Vector embeddings with metadata",
        "characteristics": [
          "Semantic search",
          "Similarity matching",
          "Contextual retrieval"
        ]
      },
      "neo4j": {
        "purpose": "Graph relationship storage",
        "schema": "Nodes and relationships",
        "characteristics": [
          "Graph traversal",
          "Path finding",
          "Relationship reasoning"
        ]
      }
    },
    "data_flow": "Raw Text \u2192 Memory Extractor \u2192 Multi-Store Write \u2192 Retrieval & Ranking \u2192 Context Generation"
  },
  "data_flow": {
    "input_sources": [
      "email",
      "mock-chat",
      "mock-email",
      "mock-teams",
      "mock-voice",
      "phone",
      "slack",
      "teams",
      "unknown"
    ],
    "processing_stages": [
      "Text Input",
      "Claude Extraction",
      "Multi-Store Write",
      "Vector Embedding",
      "Graph Relationship Creation",
      "Retrieval & Ranking",
      "Context Generation"
    ],
    "data_transformations": {
      "text_to_facts": "Claude extracts structured facts from raw text",
      "text_to_episodes": "Claude creates semantic episode summaries",
      "text_to_entities": "Claude identifies entities and relationships",
      "facts_to_sqlite": "Structured facts stored with confidence scores",
      "episodes_to_chromadb": "Semantic episodes stored as vector embeddings",
      "entities_to_neo4j": "Entities and relationships stored as graph nodes"
    },
    "retrieval_flow": {
      "query_processing": "User query processed through multiple retrieval methods",
      "vector_search": "ChromaDB performs semantic similarity search",
      "fact_lookup": "SQLite provides structured fact retrieval",
      "graph_traversal": "Neo4j finds relationship paths",
      "ranking": "Multi-factor scoring combines all results",
      "context_generation": "Claude creates final context card"
    }
  },
  "storage_layers": {
    "sqlite": {
      "total_items": 98,
      "data_types": [
        "Facts",
        "Key-Value Pairs"
      ],
      "schema_analysis": {
        "primary_key": "guid + key composite",
        "fields": [
          "guid",
          "key",
          "value",
          "confidence",
          "source",
          "ts"
        ],
        "indexes": [
          "guid",
          "confidence",
          "ts"
        ],
        "constraints": [
          "UNIQUE(guid, key)"
        ]
      },
      "data_distribution": {
        "by_source": {
          "mock-email": 8,
          "slack": 24,
          "email": 29,
          "teams": 21,
          "phone": 7,
          "mock-teams": 4,
          "mock-voice": 1,
          "mock-chat": 4
        },
        "by_confidence": {
          "0.0-0.2": 0,
          "0.2-0.4": 0,
          "0.4-0.6": 0,
          "0.6-0.8": 0,
          "0.8-1.0": 98
        },
        "unique_keys": 98
      },
      "storage_efficiency": "High - optimized for key-value lookups"
    },
    "chromadb": {
      "total_items": 32,
      "data_types": [
        "Episodes",
        "Vector Embeddings"
      ],
      "schema_analysis": {
        "collection": "episodes_mem",
        "fields": [
          "id",
          "document",
          "metadata",
          "embedding"
        ],
        "metadata_fields": [
          "guid",
          "timestamp",
          "source",
          "importance",
          "tags"
        ],
        "embedding_dimension": "1536 (Titan)"
      },
      "data_distribution": {
        "by_source": {
          "unknown": 32
        },
        "by_channel": {
          "email": 8,
          "phone": 2,
          "slack": 9,
          "mock-email": 3,
          "mock-voice": 1,
          "teams": 5,
          "mock-teams": 2,
          "mock-chat": 2
        },
        "by_importance": {
          "0.0-0.2": 0,
          "0.2-0.4": 0,
          "0.4-0.6": 4,
          "0.6-0.8": 0,
          "0.8-1.0": 28
        }
      },
      "storage_efficiency": "Medium - optimized for semantic search"
    },
    "neo4j": {
      "total_items": 100,
      "data_types": [
        "Nodes",
        "Relationships"
      ],
      "schema_analysis": {
        "node_labels": [
          "User",
          "Fact",
          "Entity",
          "Episode"
        ],
        "relationship_types": [
          "HAS_FACT",
          "RELATES_TO",
          "HAS_EPISODE"
        ],
        "constraints": [
          "UNIQUE user_guid",
          "UNIQUE entity_key",
          "UNIQUE fact_key"
        ]
      },
      "data_distribution": {
        "total_nodes": 100,
        "node_types": "Mixed (User, Fact, Entity, Episode)",
        "relationship_types": "RELATES_TO, HAS_FACT, HAS_EPISODE"
      },
      "storage_efficiency": "Medium - optimized for graph traversal"
    }
  },
  "data_quality": {
    "facts_quality": {
      "total_facts": 98,
      "average_confidence": 0.97,
      "high_confidence_count": 98,
      "high_confidence_percentage": 100.0,
      "confidence_distribution": {
        "0.0-0.2": 0,
        "0.2-0.4": 0,
        "0.4-0.6": 0,
        "0.6-0.8": 0,
        "0.8-1.0": 98
      }
    },
    "episodes_quality": {
      "total_episodes": 32,
      "average_importance": 1.894,
      "high_importance_count": 28,
      "high_importance_percentage": 87.5,
      "importance_distribution": {
        "0.0-0.2": 0,
        "0.2-0.4": 0,
        "0.4-0.6": 4,
        "0.6-0.8": 0,
        "0.8-1.0": 28
      }
    },
    "overall_quality_score": 1.432
  },
  "relationships": {
    "relationship_types": {
      "RELATES_TO": 139,
      "HAS_FACT": 102
    },
    "node_types": {
      "Entity": 140,
      "Fact": 102,
      "User": 1
    },
    "path_lengths": {
      "1": 241,
      "2": 83,
      "3": 23
    },
    "graph_density": 0.1,
    "connectivity": {
      "connected_components": "Single connected component",
      "average_degree": "Variable based on relationships",
      "clustering_coefficient": "Medium - some clustering present"
    }
  },
  "performance": {
    "storage_capacity": {
      "sqlite": "98 facts (estimated 49.0KB)",
      "chromadb": "32 episodes (estimated 64KB)",
      "neo4j": "100 nodes (estimated 100KB)"
    },
    "query_performance": {
      "sqlite": "Fast - O(1) key lookups, O(log n) range queries",
      "chromadb": "Medium - O(k) vector similarity search",
      "neo4j": "Variable - O(depth) graph traversal"
    },
    "scalability": {
      "sqlite": "Good - up to 1M facts per user",
      "chromadb": "Good - up to 100K episodes per user",
      "neo4j": "Good - up to 1M nodes per user"
    },
    "memory_usage": {
      "sqlite": "Low - embedded database",
      "chromadb": "Medium - vector storage",
      "neo4j": "Medium - graph database"
    }
  },
  "recommendations": [
    "\u2705 Storage system is healthy and well-balanced"
  ]
}